name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - name: Lint
        run: cargo clippy

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: rustup toolchain install stable --profile minimal
      - uses: Swatinem/rust-cache@v2
      - name: Run tests
        run: cargo test

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v5
    - run: rustup toolchain install stable --profile minimal
    - uses: Swatinem/rust-cache@v2
    - name: Build
      run: cargo build --release

  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: 'projects/922939596495/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
          service_account: 'container-builder-sa@mussia-infra.iam.gserviceaccount.com'
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
      - run: |-
          gcloud --quiet auth configure-docker europe-central2-docker.pkg.dev
      - name: Log into registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            yurikrupnik/first-rust-app
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=sha
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
#          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=registry,ref=yurikrupnik/first-rust-app:buildcache
          cache-to: type=registry,ref=yurikrupnik/first-rust-app:buildcache,mode=max
#  kaniko:
#    runs-on: ubuntu-latest
#    permissions:
#      contents: 'read'
#      id-token: 'write'
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#      - id: 'auth'
#        uses: 'google-github-actions/auth@v1'
#        with:
#          workload_identity_provider: 'projects/922939596495/locations/global/workloadIdentityPools/github-pool/providers/github-provider'
#          service_account: 'container-builder-sa@mussia-infra.iam.gserviceaccount.com'
#      - name: 'Set up Cloud SDK'
#        uses: 'google-github-actions/setup-gcloud@v1'
#      - run: |-
#          gcloud --quiet auth configure-docker europe-central2-docker.pkg.dev
#      - name: Kaniko build
#        uses: aevea/action-kaniko@master
#        with:
#          image: yurikrupnik/kaniko-first-rust-app
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_PASSWORD }}
#          cache: true
#          cache_registry: yurikrupnik/kaniko-first-rust-app-cache
