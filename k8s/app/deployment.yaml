apiVersion: apps/v1
kind: Deployment
metadata:
  name: rust-app
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: rust-app
  template:
    metadata:
      labels:
        app: rust-app
    spec:
      containers:
      - name: rust-app
        image: first-rust-app:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        env:
        - name: DATABASE_URL
          value: "postgres://app:secure-password-123@postgres-service:5432/app"
        - name: REDIS_URL
          value: "redis://redis-service:6379"
        - name: MONGODB_URL
          value: "mongodb://admin:password123@mongodb-service:27017"
        - name: JWT_SECRET
          value: "your-jwt-secret-key-change-this-in-production"
        - name: JWT_EXPIRES_IN
          value: "3600"
        - name: JWT_REFRESH_EXPIRES_IN
          value: "604800"
        - name: PORT
          value: "8080"
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5

---
apiVersion: v1
kind: Service
metadata:
  name: rust-app
  namespace: default
spec:
  selector:
    app: rust-app
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: rust-app
  namespace: default
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: rust-app.local
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: rust-app
            port:
              number: 8080